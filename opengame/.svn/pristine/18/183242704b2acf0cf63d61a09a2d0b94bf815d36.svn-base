package me.ckhd.opengame.gamecode.web;

import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.validation.ConstraintViolationException;

import me.ckhd.opengame.common.beanvalidator.BeanValidators;
import me.ckhd.opengame.common.persistence.Page;
import me.ckhd.opengame.common.utils.StringUtils;
import me.ckhd.opengame.common.utils.excel.ExportExcel;
import me.ckhd.opengame.common.utils.excel.ImportExcel;
import me.ckhd.opengame.common.web.BaseController;
import me.ckhd.opengame.gamecode.entity.GameCode;
import me.ckhd.opengame.gamecode.service.GameCodeService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.alibaba.fastjson.JSONObject;
import com.google.common.collect.Lists;
/**
 * 官网礼包码的导入，短信发送接口
 * @author llbas
 *
 */

@Controller
@RequestMapping(value = "${adminPath}/game/gamecode")
public class GameCodeController extends BaseController {
	@Autowired
	private GameCodeService gameCodeService;
	
	@RequestMapping(value="importweb")
	public String getweb(GameCode gameCode,HttpServletRequest request,HttpServletResponse response, Model model) {
		Page<GameCode> page = gameCodeService.findPage(new Page<GameCode>(request, response), gameCode);
		model.addAttribute("page", page);
		
		List<Map<String, String>> allCkAppId = gameCodeService.getAllCkApp();
		model.addAttribute("allCkApp", allCkAppId);
		return "modules/app/gameCodeUpload";

	}
	
	/**
	 * 导入用户数据
	 * 
	 * @param file
	 * @param redirectAttributes
	 * @return
	 */
	@RequestMapping(value = "import")
	public String importFile(@RequestParam("ckAppId")String ckAppId,MultipartFile file,
			RedirectAttributes redirectAttributes) {
		try {
			int successNum = 0;
			int failureNum = 0;
			StringBuilder failureMsg = new StringBuilder();
			ImportExcel ei = new ImportExcel(file, 1, 0);
			List<GameCode> list = ei.getDataList(GameCode.class);
			for (GameCode gameCode : list) {
				try {
					gameCode.setStatus("0");
					gameCode.setCkAppId(ckAppId);
					GameCode gc = gameCodeService.findGameCodeByCodeAndCkAppId(gameCode.getCode(),ckAppId);
					if(gc != null){
						continue;
					}
					gameCodeService.save(gameCode);
					successNum++;
				} catch (ConstraintViolationException ex) {
					failureMsg.append("<br/>礼包码" +gameCode.getCode()
							+ " 导入失败：");
					List<String> messageList = BeanValidators
							.extractPropertyAndMessageAsList(ex, ": ");
					for (String message : messageList) {
						failureMsg.append(message + "; ");
						failureNum++;
					}
				} catch (Exception ex) {
					failureMsg.append("<br/>礼包码" +gameCode.getCode()
							+ " 导入失败：" + ex.getMessage());
				}
			}
			if (failureNum > 0) {
				failureMsg.insert(0, "，失败 " + failureNum + " 条礼品码，导入信息如下：");
			}
			addMessage(redirectAttributes, "已成功导入 " + successNum + " 条礼品码"
					+ failureMsg);
		} catch (Exception e) {
			addMessage(redirectAttributes, "导入礼品码失败！失败信息：" + e.getMessage());
		}
		return "redirect:" + adminPath + "/game/gamecode/importweb";
	}

	/**
	 * 下载导入消耗数据模板
	 * 
	 * @param response
	 * @param redirectAttributes
	 * @return
	 */
	@RequestMapping(value = "import/template")
	public String importFileTemplate(HttpServletRequest request,
			HttpServletResponse response, RedirectAttributes redirectAttributes) {
		try {
			
			String fileName = "礼品码导入模板.xlsx";
			List<GameCode> list = Lists.newArrayList();
			list.add(gameCodeService.findList(new GameCode()).get(0));
			new ExportExcel("礼包码", GameCode.class, 2).setDataList(list)
					.write(response, fileName).dispose();
			return null;
		} catch (Exception e) {
			addMessage(redirectAttributes, "导入模板下载失败！失败信息：" + e.getMessage());
		}
		return "redirect:" + adminPath + "/game/gamecode/importweb";
	}

	@RequestMapping(value = "sendtext",produces={"application/json;charset=utf-8"})
	@ResponseBody
	public String sendtext(@RequestParam("phoneNum") String phoneNum,@RequestParam("ckAppId") String ckAppId,@RequestParam("callback")String callback,HttpServletRequest request) {
		JSONObject jo = new JSONObject();
		String result = "";
		if(StringUtils.isNoneBlank(phoneNum)&&StringUtils.isNotBlank(ckAppId)){
				result = gameCodeService.send(phoneNum,ckAppId);
		}else{
			jo.put("result", "4");			
			result = jo.toJSONString();
		}
		return callback+"("+result+")";
	}
	
	
}
