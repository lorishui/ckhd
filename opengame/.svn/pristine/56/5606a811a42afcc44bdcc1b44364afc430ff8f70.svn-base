package me.ckhd.opengame.online.request.appstore;

import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URL;
import java.util.Date;
import java.util.Locale;
import java.util.Map;

import javax.net.ssl.HttpsURLConnection;
import javax.net.ssl.SSLContext;
import javax.net.ssl.TrustManager;

import me.ckhd.opengame.common.utils.DateUtils;
import me.ckhd.opengame.common.utils.StringUtils;
import me.ckhd.opengame.online.request.appstore.BaseHttpSSLSocketFactory.TrustAnyHostnameVerifier;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.alibaba.fastjson.JSONObject;
import com.nearme.oauth.net.TrustAnyTrustManager;

public class AppStoreVerify {
	static Logger log = LoggerFactory.getLogger(AppStoreVerify.class);
	private static final String url_sandbox="https://sandbox.itunes.apple.com/verifyReceipt"; //沙盒测试
	private static final String url_verify="https://buy.itunes.apple.com/verifyReceipt";//正式地址
	 
	public static void getIosResponseData(Map<String,Object> map){
		String url = url_verify;
		//苹果客户端传上来的数据,是最原始的加密数据
		String encData = map.get("receipt")!= null?map.get("receipt").toString():"";
		int n = 0;
		log.info("appstore encData="+encData);
		String data = postThree(encData, url,n);
		log.info("appstore responseData="+data);
		if(data==null){  
             //苹果服务器没有返回验证结果  
			map.put("status", 2);//请求验证失败
        }else{
        	//跟苹果验证有返回结果------------------  
            JSONObject json = JSONObject.parseObject(data);
            String states=json.getString("status"); 
            if(states.equals("0")){//验证成功  
            	JSONObject receiptJson = JSONObject.parseObject(json.getString("receipt"));   	
            	String transaction_id = receiptJson.getString("transaction_id");
            	String product_id = receiptJson.getString("product_id");
            	if(!product_id.equals(map.get("productId").toString())){
            		map.put("status", -3);//计费点不对应
            	}else{
            		long time = Long.parseLong(receiptJson.get("original_purchase_date_ms").toString());
            		Date date1 = DateUtils.beforeNumDate(3);
            		if(time >= date1.getTime()){
            			map.put("status", 0);
            		}else{
            			map.put("status", -2);//超过验证时间
            		}
            	}
            	map.put("transaction_id", transaction_id.toString());
            }else if(states.equals("21007")){//切换到沙盒
            	url = url_sandbox;
            	map.put("syc", "1");
            	encData = map.get("receipt")!= null?map.get("receipt").toString():"";
            	int m = 0;
        		log.info("appstore encData="+encData);
        		data = postThree(encData, url,m);
        		log.info("appstore responseData="+data);
        		//跟苹果验证有返回结果------------------  
                json = JSONObject.parseObject(data);
                states=json.getString("status"); 
                if(states.equals("0")){
                	JSONObject receiptJson = JSONObject.parseObject(json.getString("receipt"));   	
                	String transaction_id = receiptJson.getString("transaction_id");
                	String product_id = receiptJson.getString("product_id");
                	if(!product_id.equals(map.get("productId").toString())){
                		map.put("status", -3);
                	}else{
                		long time = receiptJson.getLong("original_purchase_date_ms");
                		Date date1 = DateUtils.beforeNumDate(3);
                		log.info("3天时间前，time="+date1.getTime());
                		if(time >= date1.getTime()){
                			map.put("status", 0);
                		}else{
                			map.put("status", -2);//超过验证时间
                		}
                	}
                	map.put("transaction_id", transaction_id.toString());
                }else{
                	map.put("status", 1);//苹果code不为零
                }
            }else{
            	map.put("status", 1);//苹果code不为零
            }
            map.put("receipt-data", data);
        } 
	}
	
	public static String postThree(String encData,String url,int n){
		String data = null;
		if( n <= 3){
			n++;
			data = buyAppVerify(encData, url);
			if(StringUtils.isNotBlank(data)){
				return data;
			}else{
				return postThree(encData, url,n);
			}
		}
		return data;
	}
	/** 
     * 苹果服务器验证 
     * @param receipt 账单 
     * @url 要验证的地址 
     * @return null 或返回结果 
     * 沙盒   https://sandbox.itunes.apple.com/verifyReceipt 
     *  
     */  
    public static String buyAppVerify(String receipt,String url){     
       log.info("appstore data:"+receipt);
       log.info("appstore url:"+url);
       try{  
           SSLContext sc = SSLContext.getInstance("SSL");  
           sc.init(null, new TrustManager[]{new TrustAnyTrustManager()}, new java.security.SecureRandom());  
           URL console = new URL(url);  
           HttpsURLConnection conn = (HttpsURLConnection) console.openConnection();  
           conn.setSSLSocketFactory(sc.getSocketFactory());  
           conn.setHostnameVerifier(new TrustAnyHostnameVerifier());  
           conn.setRequestMethod("POST");  
           conn.setRequestProperty("content-type", "text/json");  
           conn.setRequestProperty("Proxy-Connection", "Keep-Alive");  
           conn.setDoInput(true);  
           conn.setDoOutput(true);  
           BufferedOutputStream hurlBufOus=new BufferedOutputStream(conn.getOutputStream());  
             
           String str= String.format(Locale.CHINA,"{\"receipt-data\":\"" + receipt+"\"}");  
           hurlBufOus.write(str.getBytes());  
           hurlBufOus.flush();  
           InputStream is = conn.getInputStream();  
	       BufferedReader reader=new BufferedReader(new InputStreamReader(is));  
	       String line = null;  
	       StringBuffer sb = new StringBuffer();  
	       while((line = reader.readLine()) != null){  
	          sb.append(line);  
	       }
	       return sb.toString();  
       }catch(Exception ex){  
           ex.printStackTrace();  
       }  
       return null;  
    } 
    
    public static void main(String[] args) {
    	String url = "https://buy.itunes.apple.com/verifyReceipt";
    	String receipt = "ewoJInNpZ25hdHVyZSIgPSAiQXBkeEpkdE53UFUyckE1L2NuM2tJTzFPVGsyNWZlREthMGFhZ3l5UnZlV2xjRmxnbHY2UkY2em5raUJTM3VtOVVjN3BWb2IrUHFaUjJUOHd5VnJITnBsb2YzRFgzSXFET2xXcSs5MGE3WWwrcXJSN0E3ald3dml3NzA4UFMrNjdQeUhSbmhPL0c3YlZxZ1JwRXI2RXVGeWJpVTFGWEFpWEpjNmxzMVlBc3NReEFBQURWekNDQTFNd2dnSTdvQU1DQVFJQ0NHVVVrVTNaV0FTMU1BMEdDU3FHU0liM0RRRUJCUVVBTUg4eEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUtEQXBCY0hCc1pTQkpibU11TVNZd0pBWURWUVFMREIxQmNIQnNaU0JEWlhKMGFXWnBZMkYwYVc5dUlFRjFkR2h2Y21sMGVURXpNREVHQTFVRUF3d3FRWEJ3YkdVZ2FWUjFibVZ6SUZOMGIzSmxJRU5sY25ScFptbGpZWFJwYjI0Z1FYVjBhRzl5YVhSNU1CNFhEVEE1TURZeE5USXlNRFUxTmxvWERURTBNRFl4TkRJeU1EVTFObG93WkRFak1DRUdBMVVFQXd3YVVIVnlZMmhoYzJWU1pXTmxhWEIwUTJWeWRHbG1hV05oZEdVeEd6QVpCZ05WQkFzTUVrRndjR3hsSUdsVWRXNWxjeUJUZEc5eVpURVRNQkVHQTFVRUNnd0tRWEJ3YkdVZ1NXNWpMakVMTUFrR0ExVUVCaE1DVlZNd2daOHdEUVlKS29aSWh2Y05BUUVCQlFBRGdZMEFNSUdKQW9HQkFNclJqRjJjdDRJclNkaVRDaGFJMGc4cHd2L2NtSHM4cC9Sd1YvcnQvOTFYS1ZoTmw0WElCaW1LalFRTmZnSHNEczZ5anUrK0RyS0pFN3VLc3BoTWRkS1lmRkU1ckdYc0FkQkVqQndSSXhleFRldngzSExFRkdBdDFtb0t4NTA5ZGh4dGlJZERnSnYyWWFWczQ5QjB1SnZOZHk2U01xTk5MSHNETHpEUzlvWkhBZ01CQUFHamNqQndNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVVOaDNvNHAyQzBnRVl0VEpyRHRkREM1RllRem93RGdZRFZSMFBBUUgvQkFRREFnZUFNQjBHQTFVZERnUVdCQlNwZzRQeUdVakZQaEpYQ0JUTXphTittVjhrOVRBUUJnb3Foa2lHOTJOa0JnVUJCQUlGQURBTkJna3Foa2lHOXcwQkFRVUZBQU9DQVFFQUVhU2JQanRtTjRDL0lCM1FFcEszMlJ4YWNDRFhkVlhBZVZSZVM1RmFaeGMrdDg4cFFQOTNCaUF4dmRXLzNlVFNNR1k1RmJlQVlMM2V0cVA1Z204d3JGb2pYMGlreVZSU3RRKy9BUTBLRWp0cUIwN2tMczlRVWU4Y3pSOFVHZmRNMUV1bVYvVWd2RGQ0TndOWXhMUU1nNFdUUWZna1FRVnk4R1had1ZIZ2JFL1VDNlk3MDUzcEdYQms1MU5QTTN3b3hoZDNnU1JMdlhqK2xvSHNTdGNURXFlOXBCRHBtRzUrc2s0dHcrR0szR01lRU41LytlMVFUOW5wL0tsMW5qK2FCdzdDMHhzeTBiRm5hQWQxY1NTNnhkb3J5L0NVdk02Z3RLc21uT09kcVRlc2JwMGJzOHNuNldxczBDOWRnY3hSSHVPTVoydG04bnBMVW03YXJnT1N6UT09IjsKCSJwdXJjaGFzZS1pbmZvIiA9ICJld29KSW05eWFXZHBibUZzTFhCMWNtTm9ZWE5sTFdSaGRHVXRjSE4wSWlBOUlDSXlNREV5TFRBM0xURXlJREExT2pVME9qTTFJRUZ0WlhKcFkyRXZURzl6WDBGdVoyVnNaWE1pT3dvSkluQjFjbU5vWVhObExXUmhkR1V0YlhNaUlEMGdJakV6TkRJd09UYzJOelU0T0RJaU93b0pJbTl5YVdkcGJtRnNMWFJ5WVc1ellXTjBhVzl1TFdsa0lpQTlJQ0l4TnpBd01EQXdNamswTkRrME1qQWlPd29KSW1KMmNuTWlJRDBnSWpFdU5DSTdDZ2tpWVhCd0xXbDBaVzB0YVdRaUlEMGdJalExTURVME1qSXpNeUk3Q2draWRISmhibk5oWTNScGIyNHRhV1FpSUQwZ0lqRTNNREF3TURBeU9UUTBPVFF5TUNJN0Nna2ljWFZoYm5ScGRIa2lJRDBnSWpFaU93b0pJbTl5YVdkcGJtRnNMWEIxY21Ob1lYTmxMV1JoZEdVdGJYTWlJRDBnSWpFek5ESXdPVGMyTnpVNE9ESWlPd29KSW1sMFpXMHRhV1FpSUQwZ0lqVXpOREU0TlRBME1pSTdDZ2tpZG1WeWMybHZiaTFsZUhSbGNtNWhiQzFwWkdWdWRHbG1hV1Z5SWlBOUlDSTVNRFV4TWpNMklqc0tDU0p3Y205a2RXTjBMV2xrSWlBOUlDSmpiMjB1ZW1Wd2RHOXNZV0l1WTNSeVltOXVkWE11YzNWd1pYSndiM2RsY2pFaU93b0pJbkIxY21Ob1lYTmxMV1JoZEdVaUlEMGdJakl3TVRJdE1EY3RNVElnTVRJNk5UUTZNelVnUlhSakwwZE5WQ0k3Q2draWIzSnBaMmx1WVd3dGNIVnlZMmhoYzJVdFpHRjBaU0lnUFNBaU1qQXhNaTB3TnkweE1pQXhNam8xTkRvek5TQkZkR012UjAxVUlqc0tDU0ppYVdRaUlEMGdJbU52YlM1NlpYQjBiMnhoWWk1amRISmxlSEJsY21sdFpXNTBjeUk3Q2draWNIVnlZMmhoYzJVdFpHRjBaUzF3YzNRaUlEMGdJakl3TVRJdE1EY3RNVElnTURVNk5UUTZNelVnUVcxbGNtbGpZUzlNYjNOZlFXNW5aV3hsY3lJN0NuMD0iOwoJInBvZCIgPSAiMTciOwoJInNpZ25pbmctc3RhdHVzIiA9ICIwIjsKfQ==";
    	System.out.println(buyAppVerify(receipt, url));
    	//CompletionReceipt
	}
}
