package me.ckhd.opengame.online.task;

import java.util.regex.Pattern;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import me.ckhd.opengame.common.utils.SpringContextHolder;
import me.ckhd.opengame.common.web.BaseController;
import me.ckhd.opengame.online.service.OnlineService;
import me.ckhd.opengame.online.version.Version;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSONObject;

@Controller
@RequestMapping(value="offline")
public class OfflineAppApi extends BaseController {
private final static String className = "offlineVersion";
	
	@Autowired
	private OnlineService onlineService;
	
	/**
	 * 渠道回调
	 * 
	 * @return
	 */
	@RequestMapping(value = "callback/{engName}/{version}/")
	@ResponseBody
	public String callback(@RequestBody String code,@PathVariable String engName,
			@PathVariable String version,HttpServletRequest request,HttpServletResponse response) {
		logger.info(String.format("渠道回调的数据%s:[%s]",engName, code));
		JSONObject json = new JSONObject();
		String returnStr = null;
		try {
			String patternStr = "^\\d.\\d.\\d$";
			boolean is = Pattern.matches(patternStr, version);
			if( !is ){
				json.put("resultCode", 4003);
				json.put("errMsg", "地址错误");
			}else{
				Version ver = SpringContextHolder.getBean(className+version.replace(".", ""));
				returnStr = ver.callback(code, engName, request , response); 
			}
		} catch (Exception e) {
			logger.error("支付发生错误：",e);
			if( json.size() == 0 ){
				json.put("resultCode", 4002);
				json.put("errMsg", "内部错误");
			}
		}
		if( returnStr == null ){
			returnStr = json.toJSONString();
		}
		logger.info(String.format("返回渠道的数据%s:[%s]",engName, returnStr));
		return returnStr;
	}
}
